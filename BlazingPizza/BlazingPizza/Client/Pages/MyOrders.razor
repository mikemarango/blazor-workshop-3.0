@page "/myorders"
@inject HttpClient HttpClient
@attribute [Authorize]

<div class="main">
    <TemplatedList Loader="LoadOrders" ListGroupClass="orders-list">
        <Loading>Loading...</Loading>
        <Empty>
            <h2>No orders placed</h2>
            <a class="btn btn-success" href="">Order some pizza</a>
        </Empty>
        <Item Context="item">
            <div class="col">
                <h5>@item.Order.CreatedTime.ToLongDateString()</h5>
                Items:
                <strong>@item.Order.Pizzas.Count()</strong>
                Total price:
                <strong>£@item.Order.GetFormattedTotalPrice()</strong>
            </div>
            <div class="col">
                Status: <strong>@item.StatusText</strong>
            </div>
            <div class="col flex-grow-0">
                <a href="myorders/@item.Order.OrderId" class="btn btn-success">
                    Track &gt;
                </a>
            </div>
        </Item>
    </TemplatedList>
    @*@if (ordersWithStatus == null)
    {
        <text>Loading...</text>
    }
    else if (ordersWithStatus.Count == 0)
    {
        <h2>No orders placed</h2>
        <a class="btn btn-success" href="">Order some pizza</a>
    }
    else
    {
        <div class="list-group orders-list">
            @foreach (var order in ordersWithStatus)
            {
                <div class="list-group-item">
                    <div class="col">
                        <h5>@order.Order.CreatedTime.ToLongDateString()</h5>
                        Items:
                        <strong>@order.Order.Pizzas.Count()</strong>;
                        Total price:
                        <strong>£@order.Order.GetFormattedTotalPrice()</strong>
                    </div>
                    <div class="col">
                        Status: <strong>@order.StatusText</strong>
                    </div>
                    <div class="col flex-grow-0">
                        <a href="myorders/@order.Order.OrderId" class="btn btn-success">
                            Track &gt;
                        </a>
                    </div>
                </div>
            }
        </div>
    }*@

</div>

@code {

    Task<List<OrderWithStatus>> LoadOrders()
    {
        return HttpClient.GetJsonAsync<List<OrderWithStatus>>("orders");
    }

    //protected override async Task OnParametersSetAsync()
    //{
    //    ordersWithStatus = await HttpClient.GetJsonAsync<List<OrderWithStatus>>("orders");
    //}
}
